{
  "version": 3,
  "sources": ["../extension.js"],
  "sourcesContent": ["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nfunction hideMsg(nsg,timeout=5000){\n\tsetTimeout(() => {\n\t\tnsg.dispose();\n\t}, timeout);\n}\nfunction formatJson(jsonStr) {\n\tjsonStr = JSON.stringify(jsonStr)\n    return new Promise((resolve, reject) => {\n\t\tfetch(\"https://jsonformatter.curiousconcept.com/process\", {\n\t\t\t\"headers\": {\n\t\t\t\t\"accept\": \"application/json, text/javascript, */*; q=0.01\",\n\t\t\t\t\"accept-language\": \"en-US,en;q=0.9,fr;q=0.8,ar;q=0.7\",\n\t\t\t\t\"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t\t\t\"sec-ch-ua\": \"\\\"Not_A Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"120\\\", \\\"Google Chrome\\\";v=\\\"120\\\"\",\n\t\t\t\t\"sec-ch-ua-mobile\": \"?0\",\n\t\t\t\t\"sec-ch-ua-platform\": \"\\\"Linux\\\"\",\n\t\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\t\"sec-fetch-site\": \"same-origin\",\n\t\t\t\t\"sec-gpc\": \"1\",\n\t\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t\t  },\n\t\t\t  \"referrer\": \"https://jsonformatter.curiousconcept.com/\",\n\t\t\t  \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n\t\t\t\"body\": `data=${encodeURIComponent(jsonStr)}&jsontemplate=2&jsonspec=4&jsonfix=on&autoprocess=&version=2`,\n\t\t\t\"method\": \"POST\",\n\t\t\t\"mode\": \"cors\",\n\t\t\t\"credentials\": \"include\"\n\t\t}).then(response => response.json())\n\t\t.then(jsonResponse => {\n\t\t\tif (jsonResponse.result && jsonResponse.result.data) {\n\t\t\t\tconst formattedJson = JSON.stringify(JSON.parse(jsonResponse.result.data.join('')), null, 4);\n\t\t\t\tlet msg = vscode.window.showInformationMessage('JSON formatted successfully');\n\t\t\t\thideMsg(msg)\n\t\t\t\tresolve(formattedJson);\n\t\t\t} else {\n\t\t\t\tlet msg =vscode.window.showErrorMessage('Failed to format JSON');\n\t\t\t\thideMsg(msg)\n\t\t\t\treject()\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tlet msg =vscode.window.showErrorMessage(`Failed to format JSON ${error}`);\n\t\t\thideMsg(msg)\n\t\t\treject(error)\n\t\t});\n    });\n}\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n    let disposable = vscode.commands.registerCommand('extension.formatJson', async function () {\n        let editor = vscode.window.activeTextEditor;\n        if (editor) {\n            let document = editor.document;\n            let selection = editor.selection;\n\n            let text = document.getText(selection);\n\n            if (text.length === 0) {\n\t\t\t\tlet msg = vscode.window.showInformationMessage('No JSON selected.');\n\t\t\t\thideMsg(msg)\n                return;\n            }\n\n            try {\n                let formattedJson = await formatJson(text);\n                editor.edit(editBuilder => {\n                    editBuilder.replace(selection, formattedJson);\n                });\n            } catch (e) {\n                let msg =vscode.window.showErrorMessage(`Failed to format JSON ${e}`);\n\t\t\t\thideMsg(msg)\n            }\n        }\n    });\n\n    context.subscriptions.push(disposable);\n}\n// This method is called when your extension is deactivated\nfunction deactivate() {}\n\nmodule.exports = {\n\tactivate,\n\tdeactivate,\n\tformatJson\n}\n"],
  "mappings": ";AAEA,IAAM,SAAS,QAAQ,QAAQ;AAG/B,SAAS,QAAQ,KAAI,UAAQ,KAAK;AACjC,aAAW,MAAM;AAChB,QAAI,QAAQ;AAAA,EACb,GAAG,OAAO;AACX;AACA,SAAS,WAAW,SAAS;AAC5B,YAAU,KAAK,UAAU,OAAO;AAC7B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1C,UAAM,oDAAoD;AAAA,MACzD,WAAW;AAAA,QACV,UAAU;AAAA,QACV,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,QAChB,aAAa;AAAA,QACb,oBAAoB;AAAA,QACpB,sBAAsB;AAAA,QACtB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,WAAW;AAAA,QACX,oBAAoB;AAAA,MACnB;AAAA,MACA,YAAY;AAAA,MACZ,kBAAkB;AAAA,MACpB,QAAQ,QAAQ,mBAAmB,OAAO,CAAC;AAAA,MAC3C,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,eAAe;AAAA,IAChB,CAAC,EAAE,KAAK,cAAY,SAAS,KAAK,CAAC,EAClC,KAAK,kBAAgB;AACrB,UAAI,aAAa,UAAU,aAAa,OAAO,MAAM;AACpD,cAAM,gBAAgB,KAAK,UAAU,KAAK,MAAM,aAAa,OAAO,KAAK,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC;AAC3F,YAAI,MAAM,OAAO,OAAO,uBAAuB,6BAA6B;AAC5E,gBAAQ,GAAG;AACX,gBAAQ,aAAa;AAAA,MACtB,OAAO;AACN,YAAI,MAAK,OAAO,OAAO,iBAAiB,uBAAuB;AAC/D,gBAAQ,GAAG;AACX,eAAO;AAAA,MACR;AAAA,IACD,CAAC,EACA,MAAM,WAAS;AACf,UAAI,MAAK,OAAO,OAAO,iBAAiB,yBAAyB,KAAK,EAAE;AACxE,cAAQ,GAAG;AACX,aAAO,KAAK;AAAA,IACb,CAAC;AAAA,EACC,CAAC;AACL;AAKA,SAAS,SAAS,SAAS;AACvB,MAAI,aAAa,OAAO,SAAS,gBAAgB,wBAAwB,iBAAkB;AACvF,QAAI,SAAS,OAAO,OAAO;AAC3B,QAAI,QAAQ;AACR,UAAI,WAAW,OAAO;AACtB,UAAI,YAAY,OAAO;AAEvB,UAAI,OAAO,SAAS,QAAQ,SAAS;AAErC,UAAI,KAAK,WAAW,GAAG;AAC/B,YAAI,MAAM,OAAO,OAAO,uBAAuB,mBAAmB;AAClE,gBAAQ,GAAG;AACC;AAAA,MACJ;AAEA,UAAI;AACA,YAAI,gBAAgB,MAAM,WAAW,IAAI;AACzC,eAAO,KAAK,iBAAe;AACvB,sBAAY,QAAQ,WAAW,aAAa;AAAA,QAChD,CAAC;AAAA,MACL,SAAS,GAAG;AACR,YAAI,MAAK,OAAO,OAAO,iBAAiB,yBAAyB,CAAC,EAAE;AAChF,gBAAQ,GAAG;AAAA,MACH;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,UAAQ,cAAc,KAAK,UAAU;AACzC;AAEA,SAAS,aAAa;AAAC;AAEvB,OAAO,UAAU;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AACD;",
  "names": []
}
